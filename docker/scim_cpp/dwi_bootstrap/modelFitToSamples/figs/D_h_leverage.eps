%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.0.584 (R2010b). Operating System: Linux 2.6.18-194.17.1.el5 #1 SMP Wed Sep 29 12:50:31 EDT 2010 x86_64.
%%Title: /home/ch145864/projects/dwi_bootstrap/src/modelFitToSamples/figs/D_h_leverage.eps
%%CreationDate: 09/06/2011  16:18:14
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    29   178   581   612
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    29   178   581   612
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0348 7344 csm

    0     0  6624  5203 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6625 5204 rf
6 w
0 4241 5134 0 0 -4241 861 4631 4 MP
PP
-5134 0 0 4241 5134 0 0 -4241 861 4631 5 MP stroke
4 w
DO
SO
6 w
0 sg
 861 4631 mt 5995 4631 L
 861  390 mt 5995  390 L
 861 4631 mt  861  390 L
5995 4631 mt 5995  390 L
 861 4631 mt 5995 4631 L
 861 4631 mt  861  390 L
1374 4631 mt 1374 4579 L
1374  390 mt 1374  441 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1334 4799 mt 
(0) s
1631 4631 mt 1631 4579 L
1631  390 mt 1631  441 L
1551 4799 mt 
(50) s
1887 4631 mt 1887 4579 L
1887  390 mt 1887  441 L
1767 4799 mt 
(100) s
2401 4631 mt 2401 4579 L
2401  390 mt 2401  441 L
2281 4799 mt 
(200) s
2760 4631 mt 2760 4579 L
2760  390 mt 2760  441 L
2640 4799 mt 
(270) s
3428 4631 mt 3428 4579 L
3428  390 mt 3428  441 L
3308 4799 mt 
(400) s
4454 4631 mt 4454 4579 L
4454  390 mt 4454  441 L
4334 4799 mt 
(600) s
5481 4631 mt 5481 4579 L
5481  390 mt 5481  441 L
5361 4799 mt 
(800) s
 861 4631 mt  912 4631 L
5995 4631 mt 5943 4631 L
 462 4684 mt 
(-0.06) s
 861 4100 mt  912 4100 L
5995 4100 mt 5943 4100 L
 462 4153 mt 
(-0.04) s
 861 3570 mt  912 3570 L
5995 3570 mt 5943 3570 L
 462 3623 mt 
(-0.02) s
 861 3040 mt  912 3040 L
5995 3040 mt 5943 3040 L
 746 3093 mt 
(0) s
 861 2510 mt  912 2510 L
5995 2510 mt 5943 2510 L
 546 2563 mt 
(0.02) s
 861 1980 mt  912 1980 L
5995 1980 mt 5943 1980 L
 546 2033 mt 
(0.04) s
 861 1450 mt  912 1450 L
5995 1450 mt 5943 1450 L
 546 1503 mt 
(0.06) s
 861  920 mt  912  920 L
5995  920 mt 5943  920 L
 546  973 mt 
(0.08) s
 861  390 mt  912  390 L
5995  390 mt 5943  390 L
 626  443 mt 
(0.1) s
 861 4631 mt 5995 4631 L
 861  390 mt 5995  390 L
 861 4631 mt  861  390 L
5995 4631 mt 5995  390 L
gs 861 390 5135 4242 rc
/c8 { 0.000000 0.000000 0.562500 sr} bdef
c8
0 2176 206 0 0 -2176 1271 3040 4 MP
PP
0 sg
-206 0 0 2176 206 0 0 -2176 1271 3040 5 MP stroke
c8
0 -812 205 0 0 812 1528 3040 4 MP
PP
0 sg
-205 0 0 -812 205 0 0 812 1528 3040 5 MP stroke
c8
0 -1400 205 0 0 1400 1785 3040 4 MP
PP
0 sg
-205 0 0 -1400 205 0 0 1400 1785 3040 5 MP stroke
c8
0 479 205 0 0 -479 2298 3040 4 MP
PP
0 sg
-205 0 0 479 205 0 0 -479 2298 3040 5 MP stroke
c8
0 1300 206 0 0 -1300 2657 3040 4 MP
PP
0 sg
-206 0 0 1300 206 0 0 -1300 2657 3040 5 MP stroke
c8
0 2067 205 0 0 -2067 3325 3040 4 MP
PP
0 sg
-205 0 0 2067 205 0 0 -2067 3325 3040 5 MP stroke
c8
0 265 205 0 0 -265 4352 3040 4 MP
PP
0 sg
-205 0 0 265 205 0 0 -265 4352 3040 5 MP stroke
c8
0 -655 206 0 0 655 5378 3040 4 MP
PP
0 sg
-206 0 0 -655 206 0 0 655 5378 3040 5 MP stroke
5134 0 861 3040 2 MP stroke
gr

2659  276 mt 
(heterogenous leverages) s
2891 4960 mt 
(b-value \(s/mm2\)) s
 375 2919 mt  -90 rotate
(error in D \(p\)) s
90 rotate

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
